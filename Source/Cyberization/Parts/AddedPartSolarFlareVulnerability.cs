using RimWorld;
using Verse;

namespace FrontierDevelopments.Cyberization.Parts
{
    public class AddedPartSolarFlareVulnerabilityProperties : HediffCompProperties
    {
        public float partEffectiveness = 1f;
        
        public AddedPartSolarFlareVulnerabilityProperties()
        {
            compClass = typeof(AddedPartSolarFlareVulnerability);
        }
    }

    public class AddedPartSolarFlareVulnerability : HediffComp, AddedPartEffectivenessModifier, ISolarFlareListener
    {
        private bool _disabled;

        public override string CompTipStringExtra => SolarFlareHandler.IsSolarFlareActive()
            ? AddedPartEffectivenessModifierUtils.EffectivenessString(GameConditionDefOf.SolarFlare.LabelCap, PartEffectiveness)
            : null;

        public float PartEffectiveness => SolarFlareHandler.IsSolarFlareActive() || _disabled ? Props.partEffectiveness : 1f;

        private AddedPartSolarFlareVulnerabilityProperties Props => (AddedPartSolarFlareVulnerabilityProperties) props;

        public void SolarFlare(bool active)
        {
            Pawn.health.Notify_HediffChanged(parent);
        }

        public void SetDisabled(bool disabled)
        {
            _disabled = disabled;
            Pawn.health.Notify_HediffChanged(parent);
        }

        public override void CompPostMake()
        {
            SolarFlareHandler.Add(this);
        }

        public override void CompPostPostRemoved()
        {
            SolarFlareHandler.Remove(this);
        }
    }
}
